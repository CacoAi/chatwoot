version: 2.1
orbs:
  node: circleci/node@6.1.0

defaults: &defaults
  working_directory: ~/build
  machine:
    image: ubuntu-2204:2024.05.1
  resource_class: large
  environment:
    RAILS_LOG_TO_STDOUT: false
    COVERAGE: true
    LOG_LEVEL: warn

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - node/install:
          node-version: '23.7'
      - node/install-pnpm
      - node/install-packages:
          pkg-manager: pnpm
          override-ci-command: pnpm i
      - run:
          name: Install PostgreSQL repository & Dependencies
          command: |
            curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo gpg --dearmor -o /usr/share/keyrings/pgdg.gpg
            echo "deb [signed-by=/usr/share/keyrings/pgdg.gpg] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
            sudo apt-get update
            DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
              libpq-dev \
              redis-server \
              postgresql-16 \
              postgresql-16-pgvector \
              build-essential \
              git \
              curl \
              libssl-dev \
              zlib1g-dev \
              libreadline-dev \
              libyaml-dev \
              openjdk-11-jdk \
              jq \
              software-properties-common \
              ca-certificates \
              imagemagick \
              libxml2-dev \
              libxslt1-dev \
              file \
              g++ \
              gcc \
              autoconf \
              gnupg2 \
              patch \
              ruby-dev \
              liblzma-dev \
              libgmp-dev \
              libncurses5-dev \
              libffi-dev \
              libgdbm6 \
              libgdbm-dev \
              libvips

      - run:
          name: Install RVM and Ruby 3.3.3
          command: |
            sudo apt-get install -y gpg
            gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
            \curl -sSL https://get.rvm.io | bash -s stable
            echo 'source ~/.rvm/scripts/rvm' >> $BASH_ENV
            source ~/.rvm/scripts/rvm
            rvm install "3.3.3"
            rvm use 3.3.3 --default
            gem install bundler -v 2.5.16
            bundle install
      - persist_to_workspace:
          root: ~/build
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: Linting & Swagger Validation
          command: |
            source ~/.rvm/scripts/rvm
            bundle exec rubocop
            pnpm run eslint
            bundle exec rake swagger:build

  security_audit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: Bundle Audit
          command: |
            bundle exec bundle audit update
            bundle exec bundle audit check -v

  frontend_tests:
    <<: *defaults
    parallelism: 2
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: Run frontend tests
          command: |
            pnpm run test:coverage -- --maxWorkers=2 --shard=${CIRCLE_NODE_INDEX}/${CIRCLE_NODE_TOTAL}

  backend_tests:
    <<: *defaults
    parallelism: 4
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: Start services and Setup DB
          command: |
            sudo service postgresql start
            sudo service redis-server start
            pg_pass=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 15; echo '')
            sed -i "s/REPLACE_WITH_PASSWORD/${pg_pass}/g" ${PWD}/.circleci/setup_chatwoot.sql
            sudo -u postgres psql -f ${PWD}/.circleci/setup_chatwoot.sql
            cp .env.example .env
            sed -i '/^FRONTEND_URL/d' .env
            sed -i -e '/REDIS_URL/ s/=.*/=redis:\/\/localhost:6379/' .env
            sed -i -e '/POSTGRES_HOST/ s/=.*/=localhost/' .env
            sed -i -e "/POSTGRES_PASSWORD/ s/=.*/=${pg_pass}/" .env
            bundle exec rails db:chatwoot_prepare
      - run:
          name: Run backend tests
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec ${TESTFILES}

workflows:
  build_and_test:
    jobs:
      - setup
      - lint:
          requires: [setup]
      - security_audit:
          requires:
            - setup
      - frontend_tests:
          requires:
            - setup
      - backend_tests:
          requires:
            - setup
