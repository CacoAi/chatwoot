version: 2.1
orbs:
  node: circleci/node@6.1.0

defaults: &defaults
  working_directory: ~/build
  machine:
    image: ubuntu-2204:2024.05.1
  resource_class: large
  environment:
    RAILS_LOG_TO_STDOUT: false
    COVERAGE: true
    LOG_LEVEL: warn

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y \
              curl gpg build-essential libpq-dev redis-server postgresql-16 postgresql-16-pgvector \
              libssl-dev zlib1g-dev libyaml-dev libxml2-dev libxslt1-dev imagemagick \
              libreadline-dev libvips libffi-dev liblzma-dev

            # Ruby installation via RVM
            curl -sSL https://get.rvm.io | bash -s stable --ruby=3.3.3
            source ~/.rvm/scripts/rvm
            gem install bundler -v 2.5.16
            bundle install

            # Node setup
            curl -fsSL https://get.pnpm.io/install.sh | sh -
            export PNPM_HOME=~/build/.pnpm-store
            export PATH=$PATH:~/.local/share/pnpm
            pnpm i

      - persist_to_workspace:
          root: ~/build
          paths:
            - .bundle
            - node_modules
            - .pnpm-store

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/build
      - checkout
      - run:
          name: Linting & Swagger Check
          command: |
            bundle exec rubocop
            pnpm run eslint
            bundle exec rake swagger:build

  security_audit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: Bundle Audit
          command: |
            bundle exec bundle audit update
            bundle exec bundle audit check -v

  frontend_tests:
    <<: *defaults
    parallelism: 2
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: Run frontend tests
          command: |
            pnpm run test:coverage -- --maxWorkers=2 --shard=${CIRCLE_NODE_INDEX}/${CIRCLE_NODE_TOTAL}

  backend_tests:
    <<: *defaults
    parallelism: 4
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: DB Setup & Migration
          command: |
            pg_pass=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 15; echo '')
            sed -i "s/REPLACE_WITH_PASSWORD/${pg_pass}/g" ${PWD}/.circleci/setup_chatwoot.sql
            sudo -u postgres psql -f ${PWD}/.circleci/setup_chatwoot.sql
            cp .env.example .env
            sed -i '/^FRONTEND_URL/d' .env
            sed -i -e '/REDIS_URL/ s/=.*/=redis:\/\/localhost:6379/' .env
            sed -i -e '/POSTGRES_HOST/ s/=.*/=localhost/' .env
            sed -i -e '/POSTGRES_USERNAME/ s/=.*/=chatwoot/' .env
            sed -i -e "/POSTGRES_PASSWORD/ s/=.*/=$pg_pass/" .env
            echo -en "\nINSTALLATION_ENV=circleci" >> ".env"
            bundle exec rails db:chatwoot_prepare

      - run:
          name: Run backend tests
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec ${TESTFILES}

workflows:
  build_and_test:
    jobs:
      - setup
      - lint:
          requires: [setup]
      - security_audit:
          requires:
            - setup
      - frontend_tests:
          requires:
            - setup
      - backend_tests:
          requires:
            - setup